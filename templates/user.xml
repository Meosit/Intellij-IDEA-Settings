<templateSet group="user">
  <template name="exconstr" value="public $CLASS_NAME$() {&#10;        super();&#10;    }&#10;&#10;public $CLASS_NAME$(java.lang.String cause) {&#10;        super(cause);&#10;    }&#10;&#10;public $CLASS_NAME$(java.lang.Throwable t) {&#10;        super(t);&#10;    }&#10;&#10;public $CLASS_NAME$(java.lang.String cause, java.lang.Throwable t) {&#10;        super(cause, t);&#10;    }&#10;" shortcut="ENTER" description="Creates four basic exception constructors" toReformat="true" toShortenFQNames="true">
    <variable name="CLASS_NAME" expression="className()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="llog" value="private static final org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger($CLASS_NAME$.class);&#10;" shortcut="ENTER" description="Declares logger variable" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS_NAME" expression="className()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="klog" value="companion object {&#10;    val LOG = org.slf4j.LoggerFactory.getLogger($CLASS_NAME$::class.java)!!&#10;}&#10;" description="" toReformat="true" toShortenFQNames="true">
    <variable name="CLASS_NAME" expression="kotlinClassName()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="slog" value="private static final org.slf4j.Logger LOG = org.slf4j.LoggerFactory.getLogger($CLASS_NAME$.class);" description="" toReformat="true" toShortenFQNames="true" useStaticImport="true">
    <variable name="CLASS_NAME" expression="className()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="kex" value="/**&#10; * $EX_DESCRIPTION$ &#10; *&#10; * @author Mikhail Snitavets&#10; */&#10;open class $CLASS_NAME$ @JvmOverloads constructor(&#10;        message: String? = null,&#10;        cause: Throwable? = null&#10;) : $ANCHESTOR$(message, cause)" description="Kotlin runtime exception declaration" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS_NAME" expression="" defaultValue="&quot;MyException&quot;" alwaysStopAt="true" />
    <variable name="ANCHESTOR" expression="" defaultValue="&quot;RuntimeException&quot;" alwaysStopAt="true" />
    <variable name="EX_DESCRIPTION" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="jbean" value="@org.springframework.context.annotation.Bean&#10;public $CLASS_NAME$ $METHOD_NAME$() {&#10;    return new $IMPL_NAME$();&#10;}" description="Java config bean declaration" toReformat="true" toShortenFQNames="true">
    <variable name="CLASS_NAME" expression="complete()" defaultValue="MyBeanClass" alwaysStopAt="true" />
    <variable name="METHOD_NAME" expression="camelCase(CLASS_NAME)" defaultValue="" alwaysStopAt="false" />
    <variable name="IMPL_NAME" expression="concat(CLASS_NAME, Impl)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="kbean" value="@org.springframework.context.annotation.Bean&#10;fun $METHOD_NAME$(): $CLASS_NAME$&#10;    = $CLASS_NAME$()" description="Kotlin config bean declaration" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS_NAME" expression="completeSmart()" defaultValue="MyBean" alwaysStopAt="true" />
    <variable name="METHOD_NAME" expression="camelCase(CLASS_NAME)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="utest" value="@org.junit.Test&#10;public void $TEST_NAME$() throws Exception {&#10;    $END$&#10;}" description="Creates JUnit test method" toReformat="false" toShortenFQNames="true">
    <variable name="TEST_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="log" value="private val LOG = org.slf4j.LoggerFactory.getLogger(getClass)" description="SLF4J logger For scala" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="SCALA_CODE" value="true" />
    </context>
  </template>
</templateSet>